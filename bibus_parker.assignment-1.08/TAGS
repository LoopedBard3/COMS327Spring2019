
character.h,448
# define CHARACTER_H2,20
typedef enum kill_type 11,141
  kill_direct,12,166
  kill_avenged,13,181
  num_kill_types14,197
} kill_type_t;15,214
class character 17,230
 character(19,257
  char symbol;25,433
  pair_t position;26,448
  int32_t speed;27,467
  uint32_t alive;28,484
  uint32_t sequence_number;36,1049
  uint32_t kills[kills37,1077
  dice damage;40,1142
  uint32_t hitpoints;41,1157
  std::vector<uint32_t> color;42,1179

descriptions.h,2003
# define DESCRIPTIONS_H2,24
# undef swap5,73
typedef struct dungeon dungeon_t;14,236
class monster_description 26,587
  std::string name,28,626
  std::string name, description;28,626
  char symbol;29,660
  std::vector<uint32_t> color;30,676
  uint32_t abilities;31,708
  dice speed,32,731
  dice speed, hitpoints,32,731
  dice speed, hitpoints, damage;32,731
  uint32_t rarity;33,765
  bool unspawnable;34,785
  monster_description(36,816
  char get_symbol(51,1414
class object_description 54,1460
  std::string name,56,1499
  std::string name, description;56,1499
  object_type_t type;57,1533
  uint32_t color;58,1556
  dice hit,59,1575
  dice hit, damage,59,1575
  dice hit, damage, dodge,59,1575
  dice hit, damage, dodge, defence,59,1575
  dice hit, damage, dodge, defence, weight,59,1575
  dice hit, damage, dodge, defence, weight, speed,59,1575
  dice hit, damage, dodge, defence, weight, speed, attribute,59,1575
  dice hit, damage, dodge, defence, weight, speed, attribute, value;59,1575
  bool artifact;60,1645
  uint32_t rarity;61,1663
  bool unspawnable;62,1683
  object_description(64,1714
  inline const std::string &get_name(get_name88,2699
  inline const std::string &get_description(get_description89,2762
  inline const object_type_t get_type(90,2839
  inline const uint32_t get_color(91,2903
  inline const dice &get_hit(get_hit92,2964
  inline const dice &get_damage(get_damage93,3018
  inline const dice &get_dodge(get_dodge94,3078
  inline const dice &get_defence(get_defence95,3136
  inline const dice &get_weight(get_weight96,3198
  inline const dice &get_speed(get_speed97,3258
  inline const dice &get_attribute(get_attribute98,3316
  inline const dice &get_value(get_value99,3382
  inline const uint32_t &get_rarity(get_rarity100,3440
  inline const bool &is_artifact(is_artifact101,3504
  inline const bool &is_unspawnable(is_unspawnable102,3567
  inline const bool &set_is_unspawnable(set_is_unspawnable103,3630

dice.h,375
# define DICE_H2,15
class dice 7,75
  int32_t base;9,98
  uint32_t number,10,114
  uint32_t number, sides;10,114
  dice(12,149
  dice(15,197
  inline void set(19,304
  inline void set_base(25,452
  inline void set_number(29,520
  inline void set_sides(33,597
  inline int32_t get_base(39,738
  inline int32_t get_number(43,797
  inline int32_t get_sides(47,860

dims.h,147
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int16_t pair_t[pair_t13,248

dungeon.h,2916
# define DUNGEON_H2,19
#define DUNGEON_X 12,178
#define DUNGEON_Y 13,213
#define MIN_ROOMS 14,248
#define MAX_ROOMS 15,282
#define ROOM_MIN_X 16,317
#define ROOM_MIN_Y 17,351
#define ROOM_MAX_X 18,385
#define ROOM_MAX_Y 19,420
#define PC_VISUAL_RANGE 20,455
#define NPC_VISUAL_RANGE 21,489
#define PC_SPEED 22,524
#define NPC_MIN_SPEED 23,559
#define NPC_MAX_SPEED 24,593
#define MAX_MONSTERS 25,628
#define MAX_ITEMS 26,663
#define SAVE_DIR 27,698
#define DUNGEON_SAVE_FILE 28,740
#define DUNGEON_SAVE_SEMANTIC 29,782
#define DUNGEON_SAVE_VERSION 30,829
#define MONSTER_DESC_FILE 31,864
#define OBJECT_DESC_FILE 32,915
#define mappair(34,967
#define mapxy(35,1025
#define hardnesspair(36,1061
#define hardnessxy(37,1129
#define charpair(38,1175
#define charxy(39,1244
#define itemxy(40,1291
enum __attribute__ ((__packed__)) terrain_type 42,1335
  ter_debug,43,1385
  ter_unknown,44,1399
  ter_wall,45,1415
  ter_wall_immutable,46,1428
  ter_floor,47,1451
  ter_floor_room,48,1465
  ter_floor_hall,49,1484
  ter_stairs,50,1503
  ter_stairs_up,51,1518
  ter_stairs_down52,1536
typedef struct room 55,1561
  pair_t position;56,1584
  pair_t size;57,1604
} room_t;58,1620
class dungeon 62,1646
  dungeon(64,1673
  dungeon() : num_rooms(0), rooms(0), map{ter_wall}, hardness{hardness64,1673
              pc_distance{pc_distance65,1740
              pc_distance{0}, pc_tunnel{pc_tunnel65,1740
              pc_distance{0}, pc_tunnel{0}, character_map{character_map65,1740
              pc_distance{0}, pc_tunnel{0}, character_map{0}, PC(65,1740
              num_monsters(66,1810
              num_monsters(0), max_monsters(66,1810
              num_monsters(0), max_monsters(0), num_items(66,1810
              num_monsters(0), max_monsters(0), num_items(0), max_spawn_items(66,1810
              num_monsters(0), max_monsters(0), num_items(0), max_spawn_items(0), character_sequence_number(66,1810
              time(67,1923
              time(0), is_new(67,1923
              time(0), is_new(0), quit(67,1923
              time(0), is_new(0), quit(0), monster_descriptions(67,1923
              object_descriptions(68,1991
  uint32_t num_rooms;69,2031
  room_t *rooms;rooms70,2054
  terrain_type map[map71,2072
  uint8_t hardness[hardness80,2732
  uint8_t pc_distance[pc_distance81,2775
  uint8_t pc_tunnel[pc_tunnel82,2821
  character *character_map[character_map83,2865
  item *item_map[item_map84,2916
  pc *PC;PC85,2957
  heap_t events;86,2968
  uint16_t num_monsters;87,2986
  uint16_t max_monsters;88,3012
  uint16_t num_items;89,3038
  uint16_t max_spawn_items;90,3061
  uint32_t character_sequence_number;91,3090
  uint32_t time;97,3520
  uint32_t is_new;98,3538
  uint32_t quit;99,3558
  std::vector<monster_description> monster_descriptions;100,3576
  std::vector<object_description> object_descriptions;101,3634

event.h,227
# define EVENT_H2,16
typedef enum eventype 8,79
  event_character_turn,9,103
} eventype_t;10,127
struct event 12,142
  eventype_t type;13,157
  uint32_t time;14,176
  uint32_t sequence;15,193
    character *c;c17,224

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

io.h,19
# define IO_H2,13

item.h,1326
# define ITEM_H2,16
class item 10,146
  std::string name,12,170
  std::string name, description;12,170
  object_type_t type;13,204
  uint32_t color,14,227
  uint32_t color, hit,14,227
  uint32_t color, hit, dodge,14,227
  uint32_t color, hit, dodge, defence,14,227
  uint32_t color, hit, dodge, defence, weight,14,227
  uint32_t color, hit, dodge, defence, weight, speed,14,227
  uint32_t color, hit, dodge, defence, weight, speed, attribute,14,227
  uint32_t color, hit, dodge, defence, weight, speed, attribute, value;14,227
  dice damage;15,300
  char symbol;16,316
  pair_t position;17,332
  item(19,362
  inline const std::string &get_name(get_name29,725
  inline const std::string &get_description(get_description30,788
  inline const object_type_t get_type(31,865
  inline const uint32_t get_color(32,929
  inline const uint32_t &get_hit(get_hit33,990
  inline const dice &get_damage(get_damage34,1048
  inline const uint32_t &get_dodge(get_dodge35,1108
  inline const uint32_t &get_defence(get_defence36,1170
  inline const uint32_t &get_weight(get_weight37,1236
  inline const uint32_t &get_speed(get_speed38,1300
  inline const uint32_t &get_attribute(get_attribute39,1362
  inline const uint32_t &get_value(get_value40,1432
  inline const char &get_symbol(get_symbol41,1494

move.h,21
# define MOVE_H2,15

npc.h,1223
# define NPC_H2,15
# define NPC_SMART 10,124
# define NPC_TELEPATH 11,163
# define NPC_TUNNEL 12,202
# define NPC_ERRATIC 13,241
# define NPC_PASS_WALL 14,280
# define NPC_DESTROY_OBJ 15,319
# define NPC_PICKUP_OBJ 16,358
# define NPC_UNIQ 17,397
# define NPC_BOSS 18,436
# define NPC_BIT09 19,475
# define NPC_BIT10 20,514
# define NPC_BIT11 21,553
# define NPC_BIT12 22,592
# define NPC_BIT13 23,631
# define NPC_BIT14 24,670
# define NPC_BIT15 25,709
# define NPC_BIT16 26,748
# define NPC_BIT17 27,787
# define NPC_BIT18 28,826
# define NPC_BIT19 29,865
# define NPC_BIT20 30,904
# define NPC_BIT21 31,943
# define NPC_BIT22 32,982
# define NPC_BIT23 33,1021
# define NPC_BIT24 34,1060
# define NPC_BIT25 35,1099
# define NPC_BIT26 36,1138
# define NPC_BIT27 37,1177
# define NPC_BIT28 38,1216
# define NPC_BIT29 39,1255
# define NPC_BIT30 40,1294
# define NPC_BIT31 41,1333
# define has_characteristic(43,1374
typedef uint32_t npc_characteristics_t;46,1487
class npc 48,1530
  npc(50,1572
  npc_characteristics_t characteristics;53,1677
  uint32_t have_seen_pc;54,1719
  pair_t pc_last_known_position;55,1745
  std::string name,58,1813
  std::string name, description;58,1813

object_type.h,569
# define OBJECT_TYPE_H2,23
typedef enum object_type 4,49
  objtype_no_type,5,77
  objtype_WEAPON,6,97
  objtype_OFFHAND,7,116
  objtype_RANGED,8,136
  objtype_LIGHT,9,155
  objtype_ARMOR,10,173
  objtype_HELMET,11,191
  objtype_CLOAK,12,210
  objtype_GLOVES,13,228
  objtype_BOOTS,14,247
  objtype_AMULET,15,265
  objtype_RING,16,284
  objtype_SCROLL,17,301
  objtype_BOOK,18,320
  objtype_FLASK,19,337
  objtype_GOLD,20,355
  objtype_AMMUNITION,21,372
  objtype_FOOD,22,395
  objtype_WAND,23,412
  objtype_CONTAINER24,429
} object_type_t;25,450

path.h,54
# define PATH_H2,15
# define HARDNESS_PER_TURN 4,32

pc.h,121
# define PC_H2,13
class pc 10,116
  terrain_type known_terrain[known_terrain12,155
  uint8_t visible[visible13,207

utils.h,123
# define UTILS_H2,16
# define rand_under(9,190
# define rand_range(13,333
#define malloc(15,407
#define UNUSED(21,551

character.cpp,531
void character_delete(9,117
int16_t *character_get_pos(character_get_pos14,170
int16_t character_get_y(19,238
int16_t character_set_y(24,316
int16_t character_get_x(29,403
int16_t character_set_x(34,481
void character_die(39,568
int character_is_alive(44,622
char character_get_symbol(49,689
uint32_t character_get_speed(54,760
uint32_t character_get_dkills(59,833
uint32_t character_get_ikills(64,920
uint32_t character_increment_dkills(69,1008
uint32_t character_increment_ikills(74,1097
uint32_t can_see(79,1202

descriptions.cpp,2825
#define MONSTER_FILE_SEMANTIC 19,335
#define MONSTER_FILE_VERSION 20,404
#define NUM_MONSTER_DESCRIPTION_FIELDS 21,447
#define OBJECT_FILE_SEMANTIC 22,489
#define OBJECT_FILE_VERSION 23,557
#define NUM_OBJECT_DESCRIPTION_FIELDS 24,600
  const char *name;name27,668
  const uint32_t value;28,689
} abilities_lookup[abilities_lookup29,714
#define color_lu_entry(50,1635
  const char *name;name52,1715
  const uint32_t value;53,1736
} colors_lookup[colors_lookup54,1761
#define type_lu_entry(70,2264
  const char *name;name72,2342
  const object_type_t value;73,2363
} types_lookup[types_lookup74,2393
static inline void eat_whitespace(120,3554
static inline void eat_blankspace(127,3667
static uint32_t parse_name(134,3780
static uint32_t parse_monster_name(158,4513
static uint32_t parse_monster_symb(165,4732
static uint32_t parse_integer(187,5103
static uint32_t parse_monster_rrty(208,5474
static uint32_t parse_color(215,5697
static uint32_t parse_monster_color(252,6309
static uint32_t parse_desc(291,7005
static uint32_t parse_monster_desc(332,7781
typedef uint32_t (*dice_parser_func_t)dice_parser_func_t339,8000
static uint32_t parse_dice(343,8176
static dice_parser_func_t parse_monster_speed 369,8629
static dice_parser_func_t parse_monster_dam 370,8690
static dice_parser_func_t parse_monster_hp 371,8749
static uint32_t parse_monster_abil(373,8809
static uint32_t parse_monster_description(410,9527
static uint32_t parse_object_name(545,14484
static uint32_t parse_object_art(553,14702
static uint32_t parse_object_rrty(572,15111
static uint32_t parse_object_desc(579,15331
static uint32_t parse_object_type(586,15547
static uint32_t parse_object_color(623,16185
static dice_parser_func_t parse_object_hit 630,16404
static dice_parser_func_t parse_object_dam 631,16462
static dice_parser_func_t parse_object_dodge 632,16520
static dice_parser_func_t parse_object_def 633,16580
static dice_parser_func_t parse_object_weight 634,16638
static dice_parser_func_t parse_object_speed 635,16699
static dice_parser_func_t parse_object_attr 636,16759
static dice_parser_func_t parse_object_val 637,16818
static uint32_t parse_object_description(639,16878
static uint32_t parse_monster_descriptions(819,23825
static uint32_t parse_object_descriptions(849,24659
uint32_t parse_descriptions(879,25527
uint32_t print_descriptions(918,26235
void monster_description::set(set937,26712
std::ostream &monster_description::print(print958,27466
std::ostream &operator<<(operator<<992,28377
uint32_t destroy_descriptions(997,28474
void get_item(1005,28613
void get_npc(1041,30051
char get_item_symbol(1066,30893
void object_description::set(set1113,31902
std::ostream &object_description::print(print1144,32987
std::ostream &operator<<(operator<<1169,33726

dice.cpp,114
int32_t dice::roll(roll6,58
std::ostream &dice::print(print22,257
std::ostream &operator<<(operator<<27,358

dungeon.cpp,1675
#define DUMP_HARDNESS_IMAGES 21,373
typedef struct corridor_path 23,407
  heap_node_t *hn;hn24,439
  uint8_t pos[pos25,459
  uint8_t from[from26,478
  int32_t cost;27,498
} corridor_path_t;28,515
#define min(30,537
static uint32_t adjacent_to_room(54,1060
static uint32_t is_open_space(62,1327
static int32_t corridor_path_cmp(67,1429
static void dijkstra_corridor(71,1583
static void dijkstra_corridor_inv(170,5436
#define hardnesspair_inv(223,6828
static int connect_two_rooms(273,9549
static int create_cycle(292,10218
static int connect_rooms(334,11824
int gaussian[gaussian347,12028
typedef struct queue_node 355,12192
  int x,356,12221
  int x, y;356,12221
  struct queue_node *next;next357,12234
} queue_node_t;358,12262
static int smooth_hardness(360,12281
static int empty_dungeon(519,16879
static int place_rooms(541,17347
static void place_stairs(578,18569
static int make_rooms(600,19224
int gen_dungeon(623,19819
void render_dungeon(636,19992
void delete_dungeon(679,20985
void init_dungeon(686,21132
int write_dungeon_map(693,21294
int write_rooms(706,21534
uint16_t count_up_stairs(728,22026
uint16_t count_down_stairs(744,22291
int write_stairs(760,22560
uint32_t calculate_dungeon_size(792,23345
int write_dungeon(803,23825
int read_dungeon_map(869,25461
int read_stairs(892,26080
int read_rooms(915,26578
int read_dungeon(973,28570
int read_pgm(1054,30543
void render_hardness_map(1139,33040
void render_movement_cost_map(1162,33588
void render_distance_map(1184,34115
void render_tunnel_distance_map(1225,35224
void new_dungeon(1266,36336
uint32_t max_item_cells(1285,36706
void gen_items(1297,36916

event.cpp,174
static uint32_t next_event_number(6,63
int32_t compare_events(16,389
event *new_event(new_event27,701
event *update_event(update_event44,995
void event_delete(52,1137

io.cpp,1041
static dungeon *thedungeon;thedungeon15,262
typedef struct io_message 17,293
  char msg[msg20,477
  struct io_message *next;next21,494
} io_message_t;22,522
static io_message_t *io_head,io_head24,541
static io_message_t *io_head, *io_tail;io_tail24,541
void io_init_terminal(26,584
void io_reset_terminal(44,1139
void io_queue_message(56,1311
static void io_print_message_queue(82,1744
void io_display_tunnel(102,2240
void io_display_distance(120,2666
static char hardness_to_char[hardness_to_char138,3085
void io_display_hardness(141,3190
static int compare_monster_distance(161,4039
static character *io_nearest_visible_monster(io_nearest_visible_monster172,4484
void io_display(204,5252
void io_display_no_fog(299,8404
void io_display_monster_list(369,10628
uint32_t io_teleport_pc(378,10833
static const char *adjectives[adjectives532,14233
static void io_scroll_monster_list(565,15048
static void io_list_monsters_display(594,15531
static void io_list_monsters(643,17252
void io_handle_input(673,18047

item.cpp,68
int16_t *item_get_pos(item_get_pos4,24
char item_get_symbol(9,89

move.cpp,237
void do_combat(18,283
void move_character(104,3467
void do_moves(125,4064
void dir_nearest_wall(189,6175
uint32_t against_wall(201,6598
uint32_t in_corner(213,7094
static void new_dungeon_level(231,7736
uint32_t move_pc(247,8042

npc.cpp,808
static uint32_t max_monster_cells(14,226
#define min(28,485
void gen_monsters(34,595
void npc_next_pos_rand_tunnel(67,1781
    uint32_t i;71,1872
    uint8_t a[a72,1889
void npc_next_pos_rand(112,2675
    uint32_t i;116,2759
    uint8_t a[a117,2776
void npc_next_pos_line_of_sight(144,3262
void npc_next_pos_line_of_sight_tunnel(168,3978
void npc_next_pos_gradient(201,4744
static void npc_next_pos_00(324,9544
static void npc_next_pos_01(336,9978
static void npc_next_pos_02(355,10647
static void npc_next_pos_03(363,10947
static void npc_next_pos_04(369,11118
static void npc_next_pos_05(381,11559
static void npc_next_pos_06(400,12235
static void npc_next_pos_07(408,12542
static void npc_next_pos_erratic(439,13488
void npc_next_pos(449,13765
uint32_t dungeon_has_npcs(457,13964

path.cpp,306
static dungeon *thedungeon;thedungeon16,689
typedef struct path 18,718
  heap_node_t *hn;hn19,740
  uint8_t pos[pos20,759
} path_t;21,777
static int32_t dist_cmp(23,788
static int32_t tunnel_cmp(30,1154
void dijkstra(37,1514
#define tunnel_movement_cost(147,6020
void dijkstra_tunnel(150,6112

pc.cpp,347
uint32_t pc_is_alive(12,151
void place_pc(17,212
void config_pc(30,704
uint32_t pc_next_pos(49,1049
uint32_t pc_in_room(147,5108
void pc_learn_terrain(162,5657
void pc_reset_visibility(168,5813
terrain_type pc_learned_terrain(179,5980
void pc_init_known_terrain(188,6217
void pc_observe_terrain(200,6430
int32_t is_illuminated(237,7435

rlg327.cpp,115
const char *victory victory16,263
const char *tombstone tombstone47,1865
void usage(68,2937
int main(79,3204

utils.cpp,25
int makedirectory(9,124
